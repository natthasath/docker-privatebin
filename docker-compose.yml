name: ${GLOBAL_NAME}

services:
  privatebin:
    container_name: ${PRIVATEBIN_CONTAINER_NAME}
    image: ${PRIVATEBIN_IMAGE_NAME}:${PRIVATEBIN_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - TZ=${TIMEZONE}
    ports:
      - ${PRIVATEBIN_HTTP_PORT}:8080
    volumes:
      - './data:/srv/data'
      - './config/conf.php:/srv/cfg/cfg.php:ro'
    networks:
      - default
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}
    read_only: true

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: ${POSTGRES_IMAGE_NAME}:${POSTGRES_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - TZ=${TIMEZONE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - './postgres-data:/var/lib/postgresql/data'
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

networks:
  default:
    name: ${PRIVATEBIN_CONTAINER_NAME}_network
    driver: bridge

volumes:
  default:
    name: ${PRIVATEBIN_CONTAINER_NAME}_data
    driver: local